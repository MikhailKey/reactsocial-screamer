{"version":3,"sources":["util/customButton.js","redux/actions/dataActions.js","redux/types.js","components/scream/DeleteScream.js","components/scream/LikeButton.js","components/scream/Comments.js","components/scream/CommentForm.js","components/scream/ScreamDialog.js","components/scream/Scream.js","redux/actions/userActions.js","components/profile/EditDetails.js","util/ProfileSkeleton.js","components/profile/Profile.js","util/ScreamSkeleton.js","pages/Home.js","pages/Login.js","pages/Signup.js","components/profile/StaticProfile.js","pages/user.js","redux/reducers/userReducer.js","redux/reducers/dataReducer.js","redux/reducers/uiReducer.js","redux/store.js","components/scream/PostScream.js","components/layout/Notifications.js","components/layout/Navbar.js","util/AuthRoute.js","App.js","util/theme.js","serviceWorker.js","index.js","images/profile-image.png","images/login.png"],"names":["children","onClick","tip","btnClassName","tipClassName","Tooltip","title","placement","className","IconButton","clearErrors","dispatch","type","connect","deleteScream","screamId","axios","delete","then","payload","catch","err","console","log","withStyles","deleteButton","position","bottom","left","props","useState","open","setOpen","handleClose","classes","color","Dialog","onClose","fullWidth","maxWidth","DialogTitle","DialogActions","Button","mapActionsToProps","likeScream","get","res","data","unlikeScream","state","user","authenticated","likes","find","like","to","theme","comments","commentImage","height","objectFit","borderRadius","commentData","marginLeft","Grid","container","map","comment","index","body","createdAt","userImage","userHandle","key","item","sm","src","alt","Typography","variant","component","Link","dayjs","format","invisibleSeparator","length","visibleSeparator","UI","submitComment","post","response","forms","setBody","errors","setErrors","useEffect","commentloading","style","textAlign","onSubmit","e","preventDefault","TextField","name","label","error","helperText","value","onChange","target","textField","disabled","button","CircularProgress","size","progressSpinner","getScream","scream","oldPath","setOldPath","setNewPath","handleOpen","window","location","pathname","newPath","indexOf","history","pushState","openDialog","likeCount","commentCount","loading","toString","split","pop","dialogMarkup","spinnerDiv","thickness","spacing","ProfileImage","expandButton","closeButton","DialogContent","dialogContent","card","display","marginBottom","image","width","content","padding","extend","relativeTime","handle","credentials","Card","CardMedia","CardContent","fromNow","logoutUser","localStorage","removeItem","defaults","headers","common","getUserData","setAuthorizationHeader","token","FBIdToken","setItem","editUserDetails","userDetails","float","margin","bio","setBio","website","setWebsite","setLocation","mapUserDetailsToState","placeholder","event","paper","imageWrapper","profileImage","backgroundColor","palette","primary","main","fullLine","halfLine","profileDetails","profile","border","Paper","NoImg","uploadImage","formData","top","verticalAlign","cursor","buttons","imageUrl","id","files","FormData","append","hidden","document","getElementById","click","href","rel","align","cardContent","flexDirection","cover","minWidth","date","Array","from","getScreams","screams","recentScreamsMarkup","xs","loginUser","userData","push","email","setEmail","password","setPassword","form","icon","AppIcon","pageTitle","noValidate","general","customError","progress","small","link","Signup","handleSubmit","newUserData","confirmPassword","signupUser","handleChange","setState","nextProps","this","Component","setProfile","screamIdParam","setScreamIdParam","match","params","screamsMarkup","initialState","notifications","middleware","thunk","reducers","combineReducers","action","filter","forEach","note","read","findIndex","deleteIndex","splice","store","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","postScream","newScream","submitButton","rows","markNotificationsRead","notificationIds","anchorEl","setAnchorEl","notificationsIcon","not","Badge","badgeContent","notificationsMarkup","verb","time","iconColor","marginRight","MenuItem","recipient","sender","aria-owns","undefined","aria-haspopup","Menu","Boolean","onEntered","unreadNotificationsIds","notificationId","AppBar","rest","render","createMuiTheme","light","dark","contrastText","secondary","typography","useNextVariants","marginTop","fontSize","borderBottom","baseURL","jwtDecode","exp","Date","now","App","exact","path","Home","Login","User","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.dde81a51.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\nexport default ({ children, onClick, tip, btnClassName, tipClassName}) => (\r\n  <Tooltip title={tip} placement=\"top\" className={tipClassName}>\r\n    <IconButton onClick={onClick} className={btnClassName}>\r\n      {children}\r\n    </IconButton>\r\n  </Tooltip>\r\n)","import { \r\n  SET_SCREAMS, \r\n  SET_SCREAM,\r\n  STOP_LOADING_UI,\r\n  LOADING_DATA, \r\n  LIKE_SCREAM, \r\n  UNLIKE_SCREAM,\r\n  DELETE_SCREAM,\r\n  LOADING_UI,\r\n  POST_SCREAM,\r\n  SET_ERRORS,\r\n  CLEAR_ERRORS,\r\n  SUBMIT_COMMENT,\r\n  LOADING_POSTCOMMENT\r\n } from '../types';\r\nimport axios from 'axios'\r\n\r\n\r\nexport const getScreams = () => (dispatch) => {\r\n  dispatch({type: LOADING_DATA});\r\n  axios.get('/screams')\r\n  .then(res => {\r\n    dispatch({\r\n      type: SET_SCREAMS,\r\n      payload: res.data\r\n    })\r\n  })\r\n  .catch(err => {\r\n    dispatch({\r\n      type: SET_SCREAMS,\r\n      payload: []\r\n    })\r\n  })\r\n}\r\n\r\nexport const likeScream = (screamId) => dispatch => {\r\n  axios\r\n    .get(`/scream/${screamId}/like`)\r\n    .then(res => {\r\n      dispatch({\r\n        type: LIKE_SCREAM,\r\n        payload: res.data\r\n      })\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    })\r\n}\r\nexport const unlikeScream = (screamId) => dispatch => {\r\n  axios\r\n    .get(`/scream/${screamId}/unlike`)\r\n    .then(res => {\r\n      console.log(res.data);\r\n      dispatch({\r\n        type: UNLIKE_SCREAM,\r\n        payload: res.data\r\n      })\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    })\r\n}\r\n\r\nexport const submitComment = (screamId, commentData) => (dispatch) => {\r\n  dispatch({ type: LOADING_POSTCOMMENT });\r\n  axios.post(`/scream/${screamId}/comment`, commentData)\r\n  .then(res => {\r\n    dispatch({\r\n      type: SUBMIT_COMMENT,\r\n      payload: res.data\r\n    });\r\n    dispatch(clearErrors());\r\n  })\r\n  .catch(err => {\r\n    dispatch({\r\n      type: SET_ERRORS,\r\n      payload: err.response.data\r\n    })\r\n  })\r\n}\r\n\r\nexport const deleteScream = (screamId) => (dispatch) => {\r\n  axios\r\n    .delete(`/scream/${screamId}`)\r\n    .then(() => {\r\n      dispatch({ type: DELETE_SCREAM, payload: screamId });\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\nexport const postScream = (newScream) => (dispatch) => {\r\n  dispatch({ type: LOADING_UI });\r\n  axios\r\n  .post(`/scream`, newScream)\r\n  .then(res => {\r\n    dispatch({\r\n      type: POST_SCREAM,\r\n      payload: res.data\r\n    });\r\n    dispatch(clearErrors())\r\n  })\r\n  .catch(err => {\r\n    dispatch({\r\n      type: SET_ERRORS,\r\n      payload: err.response.data\r\n    })\r\n  })\r\n}\r\nexport const clearErrors = () => dispatch => {\r\n  dispatch({ type: CLEAR_ERRORS })\r\n}\r\nexport const getScream = (screamId) => (dispatch) => {\r\n  dispatch({type: LOADING_UI});\r\n  axios.get(`/scream/${screamId}`)\r\n    .then(res => {\r\n      dispatch({\r\n        type: SET_SCREAM,\r\n        payload: res.data\r\n      });\r\n      dispatch({type: STOP_LOADING_UI}) \r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\nexport const getUserData = (userHandle) => dispatch => {\r\n  dispatch({type: LOADING_DATA});\r\n  axios.get(`/user/${userHandle}`)\r\n  .then(res => {\r\n    dispatch({\r\n      type: SET_SCREAMS,\r\n      payload: res.data.screams\r\n    });\r\n  })\r\n  .catch(err => {\r\n    dispatch({\r\n      type: SET_ERRORS,\r\n      payload: null\r\n    })\r\n  })\r\n\r\n}","//User reducer types\r\nexport const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\r\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED';\r\nexport const SET_USER = 'SET_USER';\r\nexport const LOADING_USER = 'LOADING_USER';\r\nexport const MARK_NOTIFICATIONS_READ = 'MARK_NOTIFICATIONS_READ';\r\n\r\n//UI reducer types\r\nexport const SET_ERRORS = 'SET_ERRORS';\r\nexport const LOADING_UI = 'LOADING_UI';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\nexport const LOADING_DATA = 'LOADING_DATA';\r\nexport const STOP_LOADING_UI = 'STOP_LOADING_UI';\r\n\r\n//Data reducer types\r\nexport const SET_SCREAMS = 'SET_SCREAMS';\r\nexport const SET_SCREAM = 'SET_SCREAM';\r\nexport const LIKE_SCREAM = 'LIKE_SCREAM';\r\nexport const UNLIKE_SCREAM = 'UNLIKE_SCREAM';\r\nexport const DELETE_SCREAM = 'DELETE_SCREAM';\r\nexport const POST_SCREAM = 'POST_SCREAM';\r\nexport const SUBMIT_COMMENT = 'SUBMIT_COMMENT';\r\nexport const LOADING_POSTCOMMENT = 'LOADING_POSTCOMMENT';","import React, { useState, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CustomButton from '../../util/customButton';\r\nimport propTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { deleteScream } from '../../redux/actions/dataActions';\r\n\r\n//mui\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\n\r\nconst styles =  {\r\n  deleteButton: {\r\n    position: 'absolute',\r\n    bottom: '15%',\r\n    left: '90%'\r\n  }\r\n}\r\nconst DeleteScream = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => {\r\n    setOpen(true)\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  };\r\n  const deleteScream = () => {\r\n    props.deleteScream(props.screamId); \r\n    setOpen(false)\r\n  }\r\n  const { classes } = props;\r\n    return (\r\n      <Fragment>\r\n        <CustomButton tip=\"delete scream\" onClick={() => handleOpen()} btnClassName={classes.deleteButton}>\r\n          <DeleteOutline color=\"secondary\"/>\r\n        </CustomButton>\r\n        <Dialog open={open} \r\n                onClose={() => handleClose()}\r\n                fullWidth\r\n                maxWidth = 'sm'>\r\n                  <DialogTitle>\r\n                    Are you sure you want to delete this scream?\r\n                  </DialogTitle>\r\n                  <DialogActions>\r\n                    <Button color=\"primary\"\r\n                            onClick={() => handleClose()}>\r\n                              Cancel\r\n                            </Button>\r\n                    <Button color=\"secondary\"\r\n                            onClick={() => deleteScream()}>\r\n                              Delete\r\n                            </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n      </Fragment>\r\n    )\r\n  }\r\nDeleteScream.propTypes = {\r\n  deleteScream: propTypes.func.isRequired,\r\n  classes: propTypes.object.isRequired,\r\n  screamId: propTypes.string.isRequired\r\n}\r\n\r\nexport default connect(null, { deleteScream })(withStyles(styles)(DeleteScream))\r\n","import React from 'react'\r\nimport CustomButton from '../../util/customButton';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n//MUI\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport { likeScream, unlikeScream } from '../../redux/actions/dataActions';\r\n  \r\n\r\nconst LikeButton = (props) => {\r\n\r\n\tconst likedScream = () => {\r\n    if (props.user.likes && props.user.likes.find(like => like.screamId === props.screamId)) {\r\n      return true;\r\n    } else return false;\r\n\t};\r\n\t\r\n\tconst likeScream = () => {\r\n    props.likeScream(props.screamId);\r\n  }\r\n  const unlikeScream = () => {\r\n    props.unlikeScream(props.screamId);\r\n\t}\r\n\tconst {user: {authenticated}} = props;\r\n\r\n\tconst likeButton = !authenticated ? (\r\n\t\t<CustomButton tip=\"Like\">\r\n\t\t\t<Link to=\"/login\">\r\n\t\t\t\t<FavoriteBorder color=\"primary\" />\r\n\t\t\t</Link>\r\n\t\t</CustomButton>\r\n\t) : (\r\n\t\t\tlikedScream() ? (\r\n\t\t\t\t<CustomButton tip=\"Undo like\" onClick={unlikeScream}>\r\n\t\t\t\t\t<FavoriteIcon color=\"primary\" />\r\n\t\t\t\t</CustomButton>\r\n\t\t\t) : (\r\n\t\t\t\t\t<CustomButton tip=\"Like\" onClick={likeScream}>\r\n\t\t\t\t\t\t<FavoriteBorder color=\"primary\" />\r\n\t\t\t\t\t</CustomButton>\r\n\t\t\t\t)\r\n\t\t);\r\n\treturn likeButton;\r\n}\r\nLikeButton.propTypes = {\r\n\tuser: PropTypes.object.isRequired,\r\n\tscreamId: PropTypes.string.isRequired,\r\n  likeScream: PropTypes.func.isRequired,\r\n  unlikeScream: PropTypes.func.isRequired,\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user\r\n})\r\n\r\nconst mapActionsToProps = {\r\n  likeScream,\r\n  unlikeScream\r\n}\r\nexport default connect(mapStateToProps, mapActionsToProps)(LikeButton)\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport {Link} from 'react-router-dom'\r\n//Redux\r\nimport {connect} from 'react-redux';\r\n//MUI\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport dayjs from 'dayjs'\r\n\r\nconst styles = (theme) => ({\r\n\t...theme.comments,\r\n\tcommentImage: {\r\n\t\tmaxWidth: '100%',\r\n\t\theight: 100,\r\n\t\tobjectFit: 'cover',\r\n\t\tborderRadius: '50%'\r\n\t},\r\n\tcommentData: {\r\n\t\tmarginLeft: 20\r\n\t}\r\n})\r\n\r\n\r\nconst Comments = (props) => {\r\n\tconst { comments, classes } = props;\r\n\treturn (\r\n\t\t<Grid container>\r\n\t\t\t{comments.map((comment, index) => {\r\n\t\t\t\tconst {body, createdAt, userImage, userHandle} = comment;\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Fragment key={createdAt}>\r\n\t\t\t\t\t\t<Grid item sm={12}>\r\n\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t<Grid item sm={2}>\r\n\t\t\t\t\t\t\t\t\t<img src={userImage} alt=\"comment\" className={classes.commentImage}/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item sm={9}>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.commentData}>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant=\"h5\" component={Link} to={`/users/${userHandle}`} color=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t\t{userHandle}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\">\r\n\t\t\t\t\t\t\t\t\t\t\t{dayjs(createdAt).format('h:mm a, MMM DD YYYY')}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<hr className={classes.invisibleSeparator}/>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant=\"body1\">{body}</Typography>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t{index !== comments.length-1 && (\r\n\t\t\t\t\t\t\t<hr className={classes.visibleSeparator}/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Fragment>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t</Grid>\r\n    )\r\n}\r\nComments.propTypes = {\r\n\tcomments: PropTypes.array.isRequired\r\n}\r\nexport default connect()(withStyles(styles)(Comments))","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\n//Redux\r\nimport { connect } from 'react-redux';\r\nimport {submitComment} from '../../redux/actions/dataActions'; \r\n//MUI \r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst styles = (theme) => ({\r\n\t...theme.forms,\r\n\t...theme.comments\r\n})\r\nconst CommentForm = (props) => {\r\n\tconst [body, setBody] = useState('');\r\n\tconst [errors, setErrors] =  useState({});\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.UI.errors) {\r\n\t\t\tsetErrors(props.UI.errors);\r\n\t\t}\r\n\t\tif (!props.UI.errors && !props.UI.commentloading) {\r\n\t\t\tsetBody('');\r\n\t\t}\r\n\t}, [props.UI.errors, props.UI.commentloading]);\r\n\t\r\n\tconst handleChange = (e) => {\r\n\t\tsetBody(e.target.value);\r\n\t}\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tprops.submitComment(props.screamId, {body});\r\n\t}\r\n\tconst { classes, authenticated, UI: {commentloading} } = props; \r\n\tconst commentFormMarkup = authenticated ? (\r\n\t\t<Grid item sm={12} style={{textAlign: 'center'}}>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<TextField \r\n\t\t\t\tname=\"body\" \r\n\t\t\t\ttype=\"text\" \r\n\t\t\t\tlabel=\"Comment on scream\" \r\n\t\t\t\terror={errors.comment ? true : false} \r\n\t\t\t\thelperText={errors.comment}\r\n\t\t\t\tvalue={body}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tfullWidth\r\n\t\t\t\tclassName={classes.textField}/>\r\n\t\t\t\t<Button \r\n\t\t\t\ttype=\"submit\" \r\n\t\t\t\tvariant=\"contained\" \r\n        color=\"primary\" \r\n        disabled={commentloading}\r\n        className={classes.button}\r\n\t\t\t\t>Submit\r\n        {commentloading && (<CircularProgress size={30} className={classes.progressSpinner}/>)}\r\n        </Button>\r\n\t\t\t</form>\r\n\t\t\t<hr className={classes.visibleSeparator}/>\r\n\t\t</Grid>\r\n\t) : null;\r\n\r\n\treturn commentFormMarkup;\r\n}\r\nCommentForm.propTypes = {\r\n\tsubmitComment: PropTypes.func.isRequired,\r\n\tUI: PropTypes.object.isRequired,\r\n\tclasses: PropTypes.object.isRequired,\r\n\tscreamId: PropTypes.string.isRequired,\r\n\tauthenticated: PropTypes.bool.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tUI: state.UI,\r\n\tauthenticated: state.user.authenticated\r\n})\r\nexport default connect(mapStateToProps, {submitComment})(withStyles(styles)(CommentForm))\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport CustomButton from '../../util/customButton';\r\nimport dayjs from 'dayjs';\r\nimport { Link } from 'react-router-dom';\r\nimport LikeButton from './LikeButton';\r\nimport Comments from './Comments';\r\nimport CommentForm from './CommentForm'; \r\n\r\n//MUI\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n//Icons\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport UnfoldMore from '@material-ui/icons/UnfoldMore';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport { getScream, clearErrors } from '../../redux/actions/dataActions';\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.comments\r\n})\r\nconst ScreamDialog = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [oldPath, setOldPath] = useState('');\r\n  const [newPath, setNewPath] = useState('');\r\n\r\n\r\n  const handleOpen = () => {\r\n    let oldPath = window.location.pathname;\r\n\r\n    const {userHandle, screamId} = props;\r\n    const newPath = `/users/${userHandle}/scream/${screamId}`;\r\n    if (oldPath.indexOf(screamId) > -1 && newPath.indexOf(screamId) > -1) {\r\n      oldPath = `/users/${userHandle}`;\r\n    } \r\n    window.history.pushState(null, null, newPath);\r\n    setOpen(true);\r\n    setOldPath(oldPath);\r\n    setNewPath(newPath);\r\n    props.getScream(props.screamId)\r\n  }\r\n  useEffect(() => {\r\n    if (props.openDialog) {\r\n      handleOpen()\r\n    }\r\n  }, [])\r\n  const handleClose = () => {\r\n    window.history.pushState(null, null, oldPath);\r\n    setOpen(false);\r\n    props.clearErrors();\r\n  }\r\n\r\n  const { classes, scream: {\r\n    screamId,\r\n    body,\r\n    createdAt,\r\n    likeCount,\r\n    commentCount,\r\n    userImage,\r\n    userHandle,\r\n    comments\r\n  }, UI: {\r\n    loading\r\n  }\r\n  } = props;\r\n\r\n  let likes = '';\r\n  if (likeCount) {\r\n    if (likeCount === 1 || likeCount.toString().split('').pop() === 1) {\r\n      likes = 'like';\r\n    } else {\r\n      likes = 'likes'\r\n    }\r\n  }\r\n  \r\n  const dialogMarkup = loading ? (\r\n    <div className={classes.spinnerDiv}>\r\n      <CircularProgress size={100} thickness={2} />\r\n    </div>\r\n  ) : (\r\n      <Grid container spacing={5}>\r\n        <Grid item >\r\n          <img src={userImage} alt=\"Profile\" className={classes.ProfileImage} />\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography component={Link} color=\"primary\" variant=\"h5\" to={`/users/${userHandle}`}>\r\n            {userHandle}\r\n          </Typography>\r\n          <hr className={classes.invisibleSeparator} />\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {dayjs(createdAt).format('h: mm a, MMMM DD YYYY')}\r\n          </Typography>\r\n          <hr className={classes.invisibleSeparator} />\r\n          <Typography variant=\"body1\">\r\n            {body}\r\n          </Typography>\r\n          <LikeButton screamId={screamId}/> \r\n          <span>{likeCount} {likes}</span>\r\n        <CustomButton tip=\"comments\">\r\n          <ChatIcon color=\"primary\" />\r\n        </CustomButton>\r\n        <span>{commentCount} comments</span>\r\n        </Grid>\r\n        <hr className={classes.visibleSeparator}/>\r\n        <CommentForm screamId={screamId}/>\r\n        <Comments comments={comments}/>\r\n      </Grid>\r\n    )\r\n  return (\r\n    <Fragment>\r\n      <CustomButton onClick={handleOpen} tip=\"Expand scream\" tipClassName={classes.expandButton}>\r\n        <UnfoldMore color=\"secondary\" />\r\n      </CustomButton>\r\n      <Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"sm\">\r\n        <CustomButton tip=\"Close\" onClick={handleClose} tipClassName={classes.closeButton}>\r\n          <CloseIcon />\r\n        </CustomButton>\r\n        <DialogContent className={classes.dialogContent}>\r\n          {dialogMarkup}\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nScreamDialog.propTypes = {\r\n  getScream: PropTypes.func.isRequired,\r\n  screamId: PropTypes.string.isRequired,\r\n  userHandle: PropTypes.string.isRequired,\r\n  scream: PropTypes.object.isRequired,\r\n  UI: PropTypes.object.isRequired,\r\n  clearErrors: PropTypes.func.isRequired,\r\n}\r\nconst mapStateToProps = state => ({\r\n  scream: state.data.scream,\r\n  UI: state.UI\r\n})\r\n\r\nconst mapActionsToProps = {\r\n  getScream,\r\n  clearErrors\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(ScreamDialog))","import React from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport PropTypes from 'prop-types';\r\nimport CustomButton from '../../util/customButton';\r\nimport DeleteScream from './DeleteScream';\r\nimport ScreamDialog from './ScreamDialog';\r\nimport LikeButton from './LikeButton';\r\n//MUI stuff\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n//icons\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\n\r\nconst styles = {\r\n  card: {\r\n    display: 'flex',\r\n    marginBottom: 20,\r\n    position: 'relative'\r\n  },\r\n  image: {\r\n    width: 200,\r\n  },\r\n  content: {\r\n    padding: 25,\r\n    objectFit: 'cover'\r\n  }\r\n}\r\n\r\nconst Scream = (props) => {\r\n  \r\n  \r\n  dayjs.extend(relativeTime);\r\n  const {\r\n    classes,\r\n    scream: {\r\n      body,\r\n      createdAt,\r\n      userImage,\r\n      userHandle,\r\n      screamId,\r\n      likeCount,\r\n      commentCount\r\n    },\r\n    user: {\r\n      authenticated,\r\n      credentials: { handle }\r\n    }\r\n  } = props;\r\n  let likes = '';\r\n  if (likeCount === 1 || likeCount.toString().split('').pop() === 1) {\r\n    likes = 'like';\r\n  } else {\r\n    likes = 'likes'\r\n  }\r\n  \r\n  const deleteButton = authenticated && userHandle === handle ? (\r\n    <DeleteScream screamId={screamId} />\r\n  ) : null;\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardMedia\r\n        image={userImage}\r\n        title=\"Profile image\" className={classes.image} />\r\n      <CardContent className={classes.content}>\r\n        <Typography variant=\"h5\" component={Link} to={`/users/${userHandle}`} color=\"primary\">{userHandle}</Typography>\r\n        {deleteButton}\r\n        <Typography variant=\"body2\" color=\"textSecondary\">{dayjs(createdAt).fromNow()}</Typography>\r\n        <Typography variant=\"body1\">{body}</Typography>\r\n        <LikeButton screamId={screamId}/>\r\n        <span>{likeCount} {likes}</span>\r\n        <CustomButton tip=\"comments\">\r\n          <ChatIcon color=\"primary\" />\r\n        </CustomButton>\r\n        <span>{commentCount} comments</span>\r\n        <ScreamDialog screamId={screamId} userHandle={userHandle} openDialog={props.openDialog}/>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n})\r\nScream.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n  scream: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  openDialog: PropTypes.bool\r\n}\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Scream))\r\n","import { SET_USER, \r\n  SET_ERRORS, \r\n  CLEAR_ERRORS, \r\n  LOADING_UI, \r\n  SET_UNAUTHENTICATED, \r\n  LOADING_USER, \r\n  MARK_NOTIFICATIONS_READ  \r\n} from '../types';\r\nimport axios from 'axios';\r\n\r\nexport const loginUser = (userData, history) => (dispatch) => {\r\n  dispatch({ type: LOADING_UI });\r\n  axios\r\n    .post('/login', userData)\r\n    .then((res) => {\r\n      setAuthorizationHeader(res.data.token);\r\n      dispatch(getUserData());\r\n      dispatch({ type: CLEAR_ERRORS });\r\n      history.push('/');\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: SET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    });\r\n};\r\n\r\n\r\nexport const signupUser = (newUserData, history) => (dispatch) => {\r\n  dispatch({ type: LOADING_UI });\r\n  axios\r\n    .post('/signup', newUserData)\r\n    .then((res) => {\r\n      setAuthorizationHeader(res.data.token);\r\n      dispatch(getUserData());\r\n      dispatch({ type: CLEAR_ERRORS });\r\n      history.push('/');\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: SET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    });\r\n};\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n  localStorage.removeItem('FBIdToken');\r\n  delete axios.defaults.headers.common['Authorization'];\r\n  dispatch({ type: SET_UNAUTHENTICATED });\r\n};\r\n\r\nexport const getUserData = () => (dispatch) => {\r\n  dispatch({ type: LOADING_USER })\r\n  axios\r\n    .get('/user')\r\n    .then((res) => {\r\n      dispatch({\r\n        type: SET_USER,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\nexport const uploadImage = (formData)  => (dispatch)=> {\r\n  dispatch({ type: LOADING_USER })\r\n  axios.post('/user/image', formData)\r\n  .then(() => {\r\n    dispatch(getUserData());\r\n  })\r\n  .catch(err => console.log(err));\r\n}\r\n\r\nexport const editUserDetails = (userDetails) => (dispatch) => {\r\n  dispatch({type: LOADING_USER});\r\n  axios\r\n    .post('/user', userDetails)\r\n    .then(() => {\r\n      dispatch(getUserData());\r\n    })\r\n    .catch(err => console.log(err));\r\n}\r\nexport const markNotificationsRead = (notificationIds) => (dispatch) => {\r\n  axios.post(`/notifications`, notificationIds)\r\n  .then(res => {\r\n    dispatch({\r\n      type: MARK_NOTIFICATIONS_READ\r\n    })\r\n  })\r\n  .catch(err => console.log(err))\r\n}\r\nconst setAuthorizationHeader = (token) => {\r\n  const FBIdToken = `Bearer ${token}`;\r\n  localStorage.setItem('FBIdToken', FBIdToken);\r\n  axios.defaults.headers.common['Authorization'] = FBIdToken;\r\n};","import React, { useState, useEffect, Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport CustomButton from '../../util/customButton';\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport { editUserDetails } from '../../redux/actions/userActions';\r\n\r\n//mui\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n//icons\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst styles = {\r\n  button: {\r\n    float: 'right'\r\n  },\r\n  textField: {\r\n    margin: '5px auto 5px auto'\r\n  },\r\n}\r\nconst EditDetails = (props) => {\r\n  const [bio, setBio] = useState('');\r\n  const [website, setWebsite] = useState('');\r\n  const [location, setLocation] = useState('');\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const mapUserDetailsToState = (credentials) => {\r\n    setBio(credentials.bio ? credentials.bio : '');\r\n    setWebsite(credentials.website ? credentials.website : '');\r\n    setLocation(credentials.location ? credentials.location : ''); \r\n  }\r\n  useEffect(() => {\r\n    const { credentials } = props;\r\n    mapUserDetailsToState(credentials);\r\n  }, [props]); \r\n\r\n  const handleOpen = () => {\r\n    setOpen(true)\r\n    mapUserDetailsToState(props.credentials);\r\n\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n  const handleChangeBio = (event) => {\r\n    setBio(event.target.value);\r\n  }\r\n  const handleChangeWebsite = (event) => {\r\n    setWebsite(event.target.value);\r\n  }\r\n  const handleChangeLocation = (event) => {\r\n    setLocation(event.target.value); \r\n  }\r\n  const handleSubmit = () => {\r\n    const userDetails = {\r\n      bio,\r\n      website,\r\n      location,\r\n    };\r\n    props.editUserDetails(userDetails);\r\n    handleClose();\r\n  }\r\n  const { classes } = props;\r\n  return (\r\n    <Fragment>\r\n      <CustomButton\r\n        tip=\"Edit details\"\r\n        onClick={handleOpen}\r\n        btnClassName={classes.button}>\r\n        <EditIcon color=\"secondary\" />\r\n      </CustomButton>\r\n      <Dialog open={open}\r\n        onClose={handleClose}\r\n        fullWidth\r\n        maxWidth=\"sm\">\r\n        <DialogTitle>Edit Your details</DialogTitle>\r\n        <DialogContent>\r\n          <form>\r\n            <TextField name=\"bio\"\r\n              type=\"text\"\r\n              label=\"Bio\"\r\n              placeholder=\"A short bio about yourself\"\r\n              className={classes.textField}\r\n              value={bio}\r\n              onChange={handleChangeBio}\r\n              fullWidth\r\n            />\r\n            <TextField name=\"website\"\r\n              type=\"text\"\r\n              label=\"Website\"\r\n              placeholder=\"Your personal website\"\r\n              className={classes.textField}\r\n              value={website}\r\n              onChange={handleChangeWebsite}\r\n              fullWidth\r\n            />\r\n            <TextField name=\"location\"\r\n              type=\"text\"\r\n              label=\"Location\"\r\n              placeholder=\"Where you live\"\r\n              className={classes.textField}\r\n              value={location}\r\n              onChange={handleChangeLocation}\r\n              fullWidth\r\n            />\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n                          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Save\r\n                          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  credentials: state.user.credentials\r\n})\r\n\r\nEditDetails.propTypes = {\r\n  editUserDetails: PropTypes.func.isRequired,\r\n  classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, { editUserDetails })(withStyles(styles)(EditDetails))\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport NoImg from '../images/profile-image.png';\r\n// MUI\r\nimport Paper from '@material-ui/core/Paper';\r\n// Icons\r\nimport LocationOn from '@material-ui/icons/LocationOn';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport CalendarToday from '@material-ui/icons/CalendarToday';\r\n\r\nconst styles = (theme) => ({\r\n  paper: {\r\n    padding: 20\r\n  },\r\n  imageWrapper: {\r\n    textAlign: 'center',\r\n    position: 'relative',\r\n  },\r\n  profileImage: {\r\n    width: 200,\r\n    height: 200,\r\n    objectFit: 'cover',\r\n    maxWidth: '100%',\r\n    borderRadius: '50%'\r\n  },\r\n  handle: {\r\n    height: 20,\r\n    backgroundColor: theme.palette.primary.main,\r\n    width: 60,\r\n    margin: '0 auto 7px auto'\r\n  },\r\n  fullLine: {\r\n    height: 15,\r\n    backgroundColor: 'rgba(0,0,0,0.6)',\r\n    width: '100%',\r\n    marginBottom: 10\r\n  },\r\n  halfLine: {\r\n    height: 15,\r\n    backgroundColor: 'rgba(0,0,0,0.6)',\r\n    width: '50%',\r\n    marginBottom: 10\r\n  },\r\n  profileDetails: {\r\n    textAlign: 'center'\r\n  },\r\n  profile: {\r\n    '& hr': {\r\n      border: 'none',\r\n      margin: '0 0 10px 0'\r\n    }\r\n  }\r\n});\r\n\r\nconst ProfileSkeleton = (props) => {\r\n  const { classes } = props;\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <div className={classes.profile}>\r\n        <div className={classes.imageWrapper}>\r\n          <img src={NoImg} alt=\"profile\" className={classes.profileImage} />\r\n        </div>\r\n        <hr />\r\n        <div className={classes.profileDetails}>\r\n          <div className={classes.handle} />\r\n          <hr />\r\n          <div className={classes.fullLine} />\r\n          <div className={classes.fullLine} />\r\n          <hr />\r\n          <LocationOn color=\"primary\" /> <span>Location</span>\r\n          <hr />\r\n          <LinkIcon color=\"primary\" /> https://website.com\r\n          <hr />\r\n          <CalendarToday color=\"primary\" /> Joined date\r\n        </div>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nProfileSkeleton.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(ProfileSkeleton);","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport EditDetails from './EditDetails';\r\nimport CustomButton from '../../util/customButton';\r\n\r\n//Mui stuff\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MuiLink from '@material-ui/core/Link';\r\nimport  Typography  from '@material-ui/core/Typography';\r\n\r\n//Redux stuff\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser, uploadImage } from '../../redux/actions/userActions';\r\n\r\n//Iсons\r\nimport LocationOn from '@material-ui/icons/LocationOn';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport CalendarToday from '@material-ui/icons/CalendarToday';\r\nimport KeyboardReturn from '@material-ui/icons/KeyboardReturn'\r\nimport ProfileSkeleton from '../../util/ProfileSkeleton';\r\n\r\nconst styles = (theme) => ({\r\n    paper: {\r\n        padding: 20\r\n      },\r\n      profile: {\r\n        '& .image-wrapper': {\r\n          textAlign: 'center',\r\n          position: 'relative',\r\n          '& button': {\r\n            position: 'absolute',\r\n            top: '80%',\r\n            left: '70%'\r\n          }\r\n        },\r\n        '& .profile-image': {\r\n          width: 200,\r\n          height: 200,\r\n          objectFit: 'cover',\r\n          maxWidth: '100%',\r\n          borderRadius: '50%'\r\n        },\r\n        '& .profile-details': {\r\n          textAlign: 'center',\r\n          '& span, svg': {\r\n            verticalAlign: 'middle'\r\n          },\r\n          '& a': {\r\n            color: theme.palette.primary.main\r\n          }\r\n        },\r\n        '& hr': {\r\n          border: 'none',\r\n          margin: '0 0 10px 0'\r\n        },\r\n        '& svg.button': {\r\n          '&:hover': {\r\n            cursor: 'pointer'\r\n          }\r\n        }\r\n      },\r\n      buttons: {\r\n        textAlign: 'center',\r\n        '& a': {\r\n          margin: '20px 10px'\r\n        }\r\n      }\r\n})\r\n\r\nconst Profile = props => {\r\n  const handleImageChange = (event) => {\r\n    const image= event.target.files[0];   \r\n    const formData = new FormData();\r\n    formData.append('image', image, image.name);\r\n    props.uploadImage(formData);\r\n  }\r\n\r\n  const  handleEditPicture = () => {\r\n    const fileInput = document.getElementById('imageInput');\r\n    fileInput.click();\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    props.logoutUser();\r\n  }\r\n\r\n  const { classes, user: { credentials: { handle, createdAt, imageUrl, bio, website, location }, \r\n  loading,\r\n  authenticated   \r\n  } \r\n  } = props;\r\n\r\n  let profileMarkup = !loading ? (authenticated ? (\r\n    <Paper className={classes.paper}>\r\n        <div className={classes.profile}>\r\n            <div className=\"image-wrapper\">\r\n                <img className=\"profile-image\" src={imageUrl} alt=\"profile\"/>\r\n                <input  type=\"file\" id=\"imageInput\" \r\n                        onChange={handleImageChange}\r\n                        hidden=\"hidden\"\r\n                        /> \r\n                <CustomButton \r\n                    tip=\"Edit profile picture\" \r\n                    onClick={handleEditPicture} \r\n                    btnClassName=\"button\">\r\n                      <EditIcon color=\"secondary\"/>\r\n                </CustomButton>\r\n            </div>\r\n            <hr/>\r\n            <div className=\"profile-details\">\r\n                <MuiLink component={Link} to={`/users/${handle}`} color='primary' variant=\"h5\">\r\n                    {handle}\r\n                </MuiLink>\r\n                <hr/>\r\n                {bio && <Typography variant=\"body2\">{bio}</Typography>}\r\n                <hr/>\r\n                {location && (\r\n                    <Fragment>\r\n                        <LocationOn color=\"secondary\"/><span>{location}</span>\r\n                        <hr/>\r\n                    </Fragment>\r\n                )}\r\n                {website && (\r\n                    <Fragment>\r\n                        <LinkIcon color=\"secondary\"/>\r\n                        <a href={`${website}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            {' '}{website}\r\n                        </a>\r\n                        <br/>\r\n                    </Fragment>\r\n                )}\r\n                <CalendarToday color=\"secondary\"/>{' '}\r\n                <span>Joined {dayjs(createdAt).format('MMM  YYYY')}</span>\r\n            </div>\r\n            <CustomButton \r\n                tip=\"Logout\" \r\n                onClick={handleLogout}>\r\n                  <KeyboardReturn color=\"secondary\"/>\r\n            </CustomButton>\r\n            <EditDetails/>\r\n        </div>\r\n    </Paper>\r\n) : (\r\n    <Paper className={classes.paper}>\r\n        <Typography variant=\"body2\" align=\"center\">\r\n            Hmm, seems like you didn't authorized\r\n        </Typography>\r\n        <div className={classes.buttons}>\r\n            <Button variant=\"contained\" color=\"primary\" component={Link} to=\"/login\">\r\n                Login\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"secondary\" component={Link} to=\"/signup\">\r\n                Sign up\r\n            </Button>\r\n        </div>\r\n    </Paper>\r\n)) : (<ProfileSkeleton/>)\r\n\r\nreturn profileMarkup;\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user\r\n})\r\n\r\nconst mapActionsToProps = {logoutUser, uploadImage}\r\nProfile.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  uploadImage: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired\r\n}\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(Profile))\r\n","import React, { Fragment } from 'react'\r\nimport NoImg from '../images/profile-image.png';\r\nimport PropTypes from 'prop-types';\r\n\r\n//MUI\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\nconst styles = (theme) => ({\r\n  card: {\r\n    display: 'flex',\r\n    marginBottom: 20\r\n  },\r\n  cardContent: {\r\n    width: '100%',\r\n    flexDirection: 'column',\r\n    padding: 25\r\n  },\r\n  cover: {\r\n    minWidth: 200,\r\n    objectFit: 'cover'\r\n  },\r\n  handle: {\r\n    width: 60,\r\n    height: 18,\r\n    backgroundColor: theme.palette.primary.main,\r\n    marginBottom: 7\r\n  },\r\n  date: {\r\n    height: 14,\r\n    width: 100,\r\n    backgroundColor: 'rgba(0,0,0, 0.3)',\r\n    marginBottom: 10\r\n  },\r\n  fullLine: {\r\n    height: 15,\r\n    width: '90%',\r\n    backgroundColor: 'rgba(0,0,0, 0.6)',\r\n    marginBottom: 10\r\n  },\r\n  halfLine: {\r\n    height: 15,\r\n    width: '50%',\r\n    backgroundColor: 'rgba(0,0,0, 0.6)',\r\n    marginBottom: 10\r\n  }\r\n});\r\n\r\n\r\nconst ScreamSkeleton = props => {\r\n  const { classes } = props;\r\n\r\n  const content = Array.from({length: 5}).map((item, index) => (\r\n    <Card className={classes.card} key={index}>\r\n      <CardMedia className={classes.cover} image={NoImg}/>\r\n      <CardContent className={classes.cardContent}>\r\n        <div className={classes.handle}/>\r\n        <div className={classes.date}/>\r\n        <div className={classes.fullLine}/>\r\n        <div className={classes.fullLine}/>\r\n        <div className={classes.halfLine}/>\r\n      </CardContent>\r\n    </Card>\r\n  ))\r\n  return (\r\n    <Fragment>\r\n      {content}\r\n    </Fragment>\r\n  )\r\n}\r\nScreamSkeleton.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\nexport default withStyles(styles)(ScreamSkeleton);\r\n","import React, { useEffect } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Scream from '../components/scream/Scream';\r\nimport Profile from '../components/profile/Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getScreams } from '../redux/actions/dataActions';\r\nimport PropTypes from 'prop-types';\r\nimport ScreamSkeleton from '../util/ScreamSkeleton';\r\n\r\nconst Home = (props) => {\r\n  useEffect(() => {\r\n    props.getScreams()\r\n  }, [])\r\n  const { screams, loading } = props.data;\r\n\r\n  let recentScreamsMarkup = !loading ? (\r\n    screams.map(scream => <Scream key={scream.screamId} scream={scream} />)\r\n  ) : <ScreamSkeleton />\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item sm={8} xs={12}>\r\n        {recentScreamsMarkup}\r\n      </Grid>\r\n      <Grid item sm={4} xs={12}>\r\n        <Profile />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\nHome.propTypes = {\r\n  getScreams: PropTypes.func.isRequired,\r\n  data: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data\r\n})\r\n\r\nexport default connect(mapStateToProps, { getScreams })(Home)\r\n","import React, { useEffect, useState } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport AppIcon from '../images/login.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//Mui stuff\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n//redux stuff\r\nimport { connect } from 'react-redux';\r\nimport { loginUser } from '../redux/actions/userActions';\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.forms\r\n})\r\n\r\nconst Login = props => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (props.UI.errors) {\r\n      setErrors(props.UI.errors)\r\n    }\r\n  }, [props.UI.errors])\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const userData = {\r\n      email,\r\n      password\r\n    }\r\n    props.loginUser(userData, props.history);\r\n  };\r\n  const handleEmailChange = (event) => {\r\n    setEmail(event.target.value);\r\n  }\r\n  const handlePasswordChange = (event) => {\r\n    setPassword(event.target.value)\r\n  }\r\n  const { classes, UI: { loading } } = props;\r\n  return (\r\n    <Grid container className={classes.form}>\r\n      <Grid item sm />\r\n      <Grid item sm>\r\n        <img className={classes.icon} src={AppIcon} alt=\"Register icon\" />\r\n        <Typography variant=\"h3\" className={classes.pageTitle}>\r\n          Login\r\n                    </Typography>\r\n        <form noValidate onSubmit={handleSubmit}>\r\n          <TextField\r\n            className={classes.textField}\r\n            id=\"email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            label=\"Email\"\r\n            value={email}\r\n            onChange={handleEmailChange}\r\n            helperText={errors.email}\r\n            error={errors.email ? true : false}\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            className={classes.textField}\r\n            id=\"password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n            helperText={errors.password}\r\n            error={errors.password ? true : false}\r\n            fullWidth\r\n          />\r\n          {errors.general && (\r\n            <Typography variant=\"body2\" className={classes.customError}>\r\n              {errors.general}\r\n            </Typography>\r\n          )}\r\n          <Button\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            disabled={loading}\r\n          >Login\r\n                        {loading && (\r\n              <CircularProgress color=\"secondary\" size={30} className={classes.progress} />\r\n            )}</Button>\r\n          <br />\r\n          <small className={classes.small}>Don't have an account? <Link className={classes.link} to='/signup'>Sign up!</Link></small>\r\n        </form>\r\n      </Grid>\r\n      <Grid item sm />\r\n    </Grid>\r\n  )\r\n}\r\nLogin.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  loginUser: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  UI: PropTypes.object.isRequired,\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  UI: state.UI,\r\n})\r\nconst mapActionsToProps = {\r\n  loginUser\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(Login));\r\n","import React, { Component } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport AppIcon from '../images/login.png';\r\nimport {Link} from 'react-router-dom';\r\n\r\n//Mui stuff\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n//redux stuff\r\nimport { connect } from 'react-redux';\r\nimport { signupUser } from '../redux/actions/userActions';\r\n\r\nconst styles = (theme) => ({\r\n    ...theme.forms\r\n})\r\n\r\nclass Signup extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            handle: '',\r\n            errors: {}\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.UI.errors) {\r\n            this.setState({ errors: nextProps.UI.errors })\r\n        }\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        // this.setState({\r\n        //     loading: true,\r\n        // });\r\n        const newUserData= {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword,\r\n            handle: this.state.handle,\r\n        };\r\n        this.props.signupUser(newUserData, this.props.history);\r\n    };\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    render() {\r\n        const { classes, UI: { loading } } = this.props;\r\n        const { errors } = this.state;\r\n        return (\r\n            <Grid container className={classes.form}>\r\n                <Grid item sm/>\r\n                <Grid item sm>\r\n                    <img className={classes.icon} src={AppIcon} alt=\"Register icon\"/>\r\n                    <Typography variant=\"h3\" className={classes.pageTitle}>\r\n                        Sign up\r\n                    </Typography>\r\n                    <form noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField \r\n                            className={classes.textField}\r\n                            id=\"email\" \r\n                            name=\"email\" \r\n                            type=\"email\" \r\n                            label=\"Email\" \r\n                            value={this.state.email}\r\n                            helperText={errors.email}\r\n                            error={errors.email ? true : false}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                            />\r\n                        <TextField \r\n                            className={classes.textField}\r\n                            id=\"password\" \r\n                            name=\"password\" \r\n                            type=\"password\" \r\n                            label=\"Password\" \r\n                            value={this.state.password}\r\n                            helperText={errors.password}\r\n                            error={errors.password ? true : false}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                            />\r\n                        <TextField \r\n                            className={classes.textField}\r\n                            id=\"confirmPassword\" \r\n                            name=\"confirmPassword\" \r\n                            type=\"password\" \r\n                            label=\"Confirm password\" \r\n                            value={this.state.confirmPassword}\r\n                            helperText={errors.confirmPassword}\r\n                            error={errors.confirmPassword ? true : false}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                            />\r\n                        <TextField \r\n                            className={classes.textField}\r\n                            id=\"handle\" \r\n                            name=\"handle\" \r\n                            type=\"text\" \r\n                            label=\"Handle\" \r\n                            value={this.state.handle}\r\n                            helperText={errors.handle}\r\n                            error={errors.handle ? true : false}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                            />\r\n                            {errors.general && (\r\n                                <Typography variant=\"body2\" className={classes.customError}>\r\n                                    {errors.general}\r\n                                </Typography>\r\n                            )}\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            type=\"submit\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            disabled={loading}\r\n                        >Sign up\r\n                        {loading && (\r\n                            <CircularProgress color=\"secondary\" size={30} className={classes.progress}/> \r\n                        )}</Button>\r\n                        <br/>\r\n                        <small className={classes.small}>Already have an account? <Link className={classes.link} to='/login'>Login!</Link></small>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item sm/>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nSignup.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    signupUser: PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    UI: state.UI\r\n})\r\n\r\nexport default connect(mapStateToProps, { signupUser })(withStyles(styles)(Signup))\r\n","import React, {  Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport dayjs from 'dayjs';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//Mui\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MuiLink from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n//Icons\r\nimport LocationOn from '@material-ui/icons/LocationOn';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport CalendarToday from '@material-ui/icons/CalendarToday';\r\n\r\nconst styles = (theme) => ({\r\n  paper: {\r\n    padding: 20\r\n  },\r\n  profile: {\r\n    '& .image-wrapper': {\r\n      textAlign: 'center',\r\n      position: 'relative'\r\n    },\r\n    '& .profile-image': {\r\n      width: 200,\r\n      height: 200,\r\n      objectFit: 'cover',\r\n      maxWidth: '100%',\r\n      borderRadius: '50%'\r\n    },\r\n    '& .profile-details': {\r\n      textAlign: 'center',\r\n      '& span, svg': {\r\n        verticalAlign: 'middle'\r\n      },\r\n      '& a': {\r\n        color: theme.palette.primary.main\r\n      }\r\n    },\r\n    '& hr': {\r\n      border: 'none',\r\n      margin: '0 0 10px 0'\r\n    }\r\n  }\r\n})\r\n\r\nconst StaticProfile = (props) => {\r\n  const { classes, profile: { handle, createdAt, imageUrl, bio, website, location } } = props;\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <div className={classes.profile}>\r\n        <div className=\"image-wrapper\">\r\n          <img className=\"profile-image\" src={imageUrl} alt=\"profile\" />\r\n        </div>\r\n        <hr />\r\n        <div className=\"profile-details\">\r\n          <MuiLink component={Link} to={`/users/${handle}`} color='primary' variant=\"h5\">\r\n            {handle}\r\n          </MuiLink>\r\n          <hr />\r\n          {bio && <Typography variant=\"body2\">{bio}</Typography>}\r\n          <hr />\r\n          {location && (\r\n            <Fragment>\r\n              <LocationOn color=\"secondary\" /><span>{location}</span>\r\n              <hr />\r\n            </Fragment>\r\n          )}\r\n          {website && (\r\n            <Fragment>\r\n              <LinkIcon color=\"secondary\" />\r\n              <a href={`${website}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                {' '}{website}\r\n              </a>\r\n              <br />\r\n            </Fragment>\r\n          )}\r\n          <CalendarToday color=\"secondary\" />{' '}\r\n          <span>Joined {dayjs(createdAt).format('MMM  YYYY')}</span>\r\n        </div> \r\n      </div>\r\n    </Paper>\r\n  )\r\n}\r\nStaticProfile.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired\r\n}\r\nexport default withStyles(styles)(StaticProfile)\r\n","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport Scream from '../components/scream/Scream';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { connect } from 'react-redux';\r\nimport { getUserData } from '../redux/actions/dataActions';\r\nimport StaticProfile from '../components/profile/StaticProfile';\r\nimport ScreamSkeleton from '../util/ScreamSkeleton';\r\nimport ProfileSkeleton from '../util/ProfileSkeleton';\r\n\r\n\r\nconst User = (props) => { \r\n  const [profile, setProfile] = useState(null);\r\n  const [screamIdParam, setScreamIdParam] = useState(null);\r\n\r\n  \r\n  useEffect(() => {\r\n    const handle = props.match.params.handle;\r\n    const screamId = props.match.params.screamId;\r\n\r\n    if (screamId) {\r\n      setScreamIdParam(screamId);\r\n    }\r\n    \r\n    props.getUserData(handle);\r\n    axios.get(`/user/${handle}`)\r\n      .then(res => {\r\n        setProfile(res.data.user)\r\n      })\r\n      .catch(err => console.log(err));\r\n  }, []);\r\n  const { screams, loading } = props.data;\r\n  const screamsMarkup = loading ? (\r\n    <ScreamSkeleton/>\r\n  ) : screams === null ? (\r\n    <p>No screams from this user</p>\r\n  ) : !{screamIdParam} ? (\r\n    screams.map(scream => <Scream key={scream.screamId} scream={scream}/>)\r\n  ) : (\r\n    screams.map(scream => {\r\n      if (scream.screamId !== screamIdParam)\r\n      return <Scream key={scream.screamId} scream={scream}/>\r\n      else return <Scream key={scream.screamId} scream={scream} openDialog/>\r\n    })\r\n  )\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item sm={8} xs={12}>\r\n        {screamsMarkup}\r\n      </Grid>\r\n      <Grid item sm={4} xs={12}>\r\n        {profile === null ? (\r\n          <ProfileSkeleton/>\r\n        ) : (\r\n          <StaticProfile profile={profile} />\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\nUser.propTypes = {\r\n  getUserData: PropTypes.func.isRequired,\r\n  data: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n  data: state.data\r\n})\r\n\r\nexport default connect(mapStateToProps, { getUserData })(User)","import {\r\n  SET_USER,\r\n  SET_AUTHENTICATED,\r\n  SET_UNAUTHENTICATED,\r\n  LOADING_USER,\r\n  LIKE_SCREAM,\r\n  UNLIKE_SCREAM,\r\n  MARK_NOTIFICATIONS_READ\r\n} from '../types';\r\n\r\nconst initialState = {\r\n  authenticated: false,\r\n  credentials: {},\r\n  loading: false,\r\n  likes: [],\r\n  notifications: []\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_AUTHENTICATED:\r\n      return {\r\n        ...state,\r\n        authenticated: true\r\n      };\r\n    case SET_UNAUTHENTICATED:\r\n      return initialState;\r\n    case SET_USER:\r\n      return {\r\n        authenticated: true,\r\n        loading: false,\r\n        ...action.payload\r\n      };\r\n    case LOADING_USER:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case LIKE_SCREAM:\r\n      return {\r\n        ...state,\r\n        likes: [\r\n          ...state.likes,\r\n          {\r\n            userHandle: state.credentials.handle,\r\n            screamId: action.payload.screamId\r\n          }\r\n        ]\r\n      }\r\n    case UNLIKE_SCREAM:\r\n      return {\r\n        ...state,\r\n        likes: state.likes.filter(like => like.screamId !== action.payload.screamId)\r\n      }\r\n    case MARK_NOTIFICATIONS_READ:\r\n      state.notifications.forEach(note => note.read = true);\r\n      return {\r\n        ...state\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { SET_SCREAMS, \r\n          LOADING_DATA, \r\n          LIKE_SCREAM, \r\n          UNLIKE_SCREAM,\r\n          DELETE_SCREAM,\r\n          POST_SCREAM,\r\n          SET_SCREAM,\r\n          SUBMIT_COMMENT\r\n        } from '../types';\r\n\r\nconst initialState = {\r\n  screams: [],\r\n  scream: {},\r\n  loading: false,\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n  switch(action.type) {\r\n    case LOADING_DATA:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n    case SET_SCREAMS: \r\n      return {\r\n        ...state,\r\n        screams: action.payload,\r\n        loading: false\r\n      }\r\n    case SET_SCREAM: \r\n    return {\r\n      ...state,\r\n      scream: action.payload\r\n    }\r\n    case LIKE_SCREAM:\r\n    case UNLIKE_SCREAM:\r\n      let index = state.screams.findIndex((scream) => scream.screamId === action.payload.screamId);\r\n      state.screams[index] = action.payload;\r\n      if (state.scream.screamId === action.payload.screamId) {\r\n        state.scream = action.payload;\r\n      }\r\n      return {\r\n        ...state\r\n      }\r\n    case DELETE_SCREAM:\r\n      let deleteIndex = state.screams.findIndex(\r\n        (scream) => scream.screamId === action.payload\r\n      );\r\n      state.screams.splice(deleteIndex, 1);\r\n      return {\r\n        ...state\r\n      };\r\n    case POST_SCREAM:\r\n      return {\r\n        ...state,\r\n        screams: [\r\n          action.payload,\r\n          ...state.screams\r\n        ]\r\n      }\r\n    case SUBMIT_COMMENT:\r\n      return {\r\n      ...state,\r\n      scream: {\r\n        ...state.scream,\r\n        comments: [action.payload, ...state.scream.comments]\r\n      }\r\n    }\r\n    default: \r\n    return state;\r\n  }\r\n}","import { SET_ERRORS, CLEAR_ERRORS, LOADING_UI, STOP_LOADING_UI, LOADING_POSTCOMMENT } from '../types';\r\n\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  commentloading: false,\r\n  errors: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_ERRORS: \r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errors: action.payload\r\n      }\r\n    case CLEAR_ERRORS: \r\n      return {\r\n        ...state,\r\n        commentloading: false,\r\n        loading: false,\r\n        errors: null\r\n      };\r\n    case LOADING_UI:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case LOADING_POSTCOMMENT:\r\n      return {\r\n        ...state,\r\n        commentloading: true,\r\n      }\r\n    case STOP_LOADING_UI:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      }\r\n    default:\r\n      return state; \r\n  }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport userReducer from './reducers/userReducer';\r\nimport dataReducer from './reducers/dataReducer';\r\nimport uiReducer from './reducers/uiReducer';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst reducers = combineReducers({\r\n    user: userReducer,\r\n    data: dataReducer,\r\n    UI: uiReducer\r\n})\r\n\r\nconst store = createStore(reducers, initialState, compose(applyMiddleware(...middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()))\r\n\r\nexport default store;","import React, { useState, useEffect, Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport CustomButton from '../../util/customButton';\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport { postScream } from '../../redux/actions/dataActions';\r\n//mui\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.forms,\r\n  submitButton: {\r\n    position: 'relative',\r\n  },\r\n  progressSpinner: {\r\n    position: 'absolute',\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    left: '91%',\r\n    top: '3%'\r\n  }\r\n})\r\nconst PostScream = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [body, setBody] = useState('');\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (props.UI.errors) {\r\n      setErrors(props.UI.errors);\r\n    }\r\n    if (!props.UI.errors && !props.UI.loading) {\r\n      setBody('');\r\n      handleClose();\r\n      setErrors({});\r\n    }\r\n  }, [props.UI.loading, props.UI.errors]);\r\n\r\n  const handleOpen = () => { \r\n    setOpen(true);\r\n  }\r\n  const handleClose = () => { \r\n    setOpen(false);\r\n    setErrors({});\r\n  }\r\n  const handleChange = (e) => {\r\n    setBody(e.target.value);\r\n  }\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    props.postScream({body})\r\n  }\r\n  const { classes, UI: { loading } } = props;\r\n  return (\r\n    <Fragment>\r\n      <CustomButton onClick={handleOpen} tip=\"Create a scream!\">\r\n        <AddIcon color=\"secondary\" />\r\n      </CustomButton>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        fullWidth\r\n        maxWidth=\"sm\">\r\n          <CustomButton tip=\"close\" onClick={handleClose} tipClassName={classes.closeButton}>\r\n            <CloseIcon/>\r\n          </CustomButton>\r\n          <DialogTitle>Post a new scream</DialogTitle>\r\n          <DialogContent>\r\n            <form onSubmit={handleSubmit}>\r\n            <TextField \r\n              name=\"body\" \r\n              type=\"text\" \r\n              label=\"Please, write your scream\" \r\n              rows=\"3\"\r\n              placeholder=\"Scream at your fellow friends\"\r\n              error={errors.body ? true : false}\r\n              helperText={errors.body}\r\n              className={classes.textField}  \r\n              onChange={handleChange}\r\n              fullWidth/>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.submitButton} disabled={loading}>\r\n              Submit\r\n              {loading && (<CircularProgress size={30} className={classes.progressSpinner}/>)}\r\n            </Button>\r\n            </form>\r\n          </DialogContent>\r\n      </Dialog>\r\n    </Fragment>\r\n  )\r\n}\r\nPostScream.propTypes = {\r\n  postScream: PropTypes.func.isRequired,\r\n  UI: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  UI: state.UI\r\n});\r\n\r\nexport default connect(mapStateToProps, { postScream })(withStyles(styles)(PostScream))\r\n","import React, { useState, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport PropTypes from 'prop-types';\r\n\r\n//MUI\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ToolTip from '@material-ui/core/ToolTip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\n//Icons\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n\r\n//Redux\r\nimport { connect } from 'react-redux';\r\nimport { markNotificationsRead } from '../../redux/actions/userActions';\r\n\r\n\r\nconst Notifications = props => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const notifications = props.notifications;\r\n\r\n  dayjs.extend(relativeTime);\r\n\r\n  const handleOpen = (event) => {\r\n    setAnchorEl(event.target)\r\n  }\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  const onMenuOpened = () => {\r\n    let unreadNotificationsIds = props.notifications.filter(not => !not.read)\r\n    .map(not => not.notificationId);\r\n    props.markNotificationsRead(unreadNotificationsIds);\r\n  }\r\n  let notificationsIcon;\r\n  if (notifications && notifications.length > 0) {\r\n    notifications.filter(not => not.read === false).length > 0 \r\n    ? notificationsIcon = (\r\n      <Badge badgeContent={notifications.filter(not => not.read === false).length}\r\n        color=\"secondary\">\r\n        <NotificationsIcon color=\"secondary\" />\r\n      </Badge>\r\n    ) : (\r\n      notificationsIcon = <NotificationsIcon/>\r\n    )\r\n  } else {\r\n    notificationsIcon = <NotificationsIcon/>\r\n  }\r\n  let notificationsMarkup = notifications && notifications.length > 0 ? (\r\n    notifications.map(not => {\r\n      const verb = not.type === 'like' ? 'liked' : 'commented on';\r\n      const time = dayjs(not.createdAt).fromNow();\r\n      const iconColor = not.read ? 'primary' : 'secondary';\r\n      const icon = not.type === 'like' ? (\r\n        <FavoriteIcon color={iconColor} style={{marginRight: 10}}/>\r\n      ) : (\r\n        <ChatIcon color={iconColor} style={{marginRight: 10}}/>\r\n      )\r\n\r\n      return (\r\n        <MenuItem key={not.createdAt} onClick={handleClose}>\r\n          {icon}\r\n          <Typography \r\n                component={Link}\r\n                color=\"default\"\r\n                variant=\"body1\"\r\n                to={`/users/${not.recipient}/scream/${not.screamId}`}\r\n                >\r\n                  {not.sender} {verb} your scream {time}\r\n                </Typography>\r\n        </MenuItem>\r\n      )\r\n    })\r\n  ) : (\r\n    <MenuItem onClick={handleClose}>\r\n      You have no notifications yet\r\n    </MenuItem>\r\n  )\r\n  return (\r\n     <Fragment>\r\n       <ToolTip placement=\"top\" title=\"Notifications\">\r\n         <IconButton aria-owns={anchorEl ? 'simple-menu' : undefined}\r\n         aria-haspopup=\"true\"\r\n         onClick={handleOpen}>\r\n           {notificationsIcon}\r\n         </IconButton>\r\n       </ToolTip>\r\n       <Menu \r\n       anchorEl={anchorEl}\r\n       open={Boolean(anchorEl)}\r\n       onClose={handleClose}\r\n       onEntered={onMenuOpened}>\r\n         {notificationsMarkup}\r\n       </Menu>\r\n     </Fragment>\r\n  )\r\n}\r\nconst mapStateToProps = state => ({\r\n  notifications: state.user.notifications\r\n})\r\n\r\nNotifications.propTypes = {\r\n  markNotificationsRead: PropTypes.func.isRequired,\r\n  notifications: PropTypes.array.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, { markNotificationsRead })(Notifications);","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport CustomButton from '../../util/customButton';\r\nimport PostScream from '../scream/PostScream';\r\nimport Notifications from './Notifications';\r\n//MUI stuff\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport ToolBar from '@material-ui/core/ToolBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nconst Navbar = props => {\r\n  const { authenticated } = props;\r\n  return (\r\n    <AppBar>\r\n      <ToolBar className=\"nav-container\">\r\n        {authenticated ? (\r\n          <Fragment>\r\n            <PostScream />\r\n            <Link to=\"/\">\r\n              <CustomButton tip=\"home\">\r\n                <HomeIcon color=\"secondary\" />\r\n              </CustomButton>\r\n            </Link>\r\n            <Link to=\"/\">\r\n              <Notifications />\r\n            </Link>\r\n          </Fragment>\r\n        ) : (\r\n            <Fragment>\r\n              <Button component={Link} to=\"/login\" color=\"inherit\">Login</Button>\r\n              <Button component={Link} to=\"/\" color=\"inherit\">Home</Button>\r\n              <Button component={Link} to=\"/signup\" color=\"inherit\">Sign up</Button>\r\n            </Fragment>\r\n          )}\r\n      </ToolBar>\r\n    </AppBar>\r\n  )\r\n}\r\nNavbar.propTypes = {\r\n  authenticated: PropTypes.bool.isRequired\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  authenticated: state.user.authenticated\r\n})\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AuthRoute = ({ component: Component, authenticated, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      authenticated === true ? <Redirect to=\"/\" /> : <Component {...props} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  authenticated: state.user.authenticated\r\n});\r\n\r\nAuthRoute.propTypes = {\r\n  user: PropTypes.object\r\n};\r\n\r\nexport default connect(mapStateToProps)(AuthRoute);","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme'\n//Pages \nimport themeStyle from './util/theme'\nimport { Home, Login, Signup, User} from './pages';\nimport jwtDecode from 'jwt-decode';\n//Redux\nimport { Provider} from 'react-redux';\nimport store from './redux/store';  \nimport { SET_AUTHENTICATED } from './redux/types'; \nimport { logoutUser, getUserData } from './redux/actions/userActions';\n\n//Components\nimport Navbar from './components/layout/Navbar';\nimport AuthRoute from './util/AuthRoute'\nimport axios from 'axios';\nconst theme = createMuiTheme(themeStyle);\n\naxios.defaults.baseURL = \"https://us-central1-mikhail95-react-social.cloudfunctions.net/api\";\nconst token = localStorage.FBIdToken;\nif (token) {\n  const decodedToken = jwtDecode(token);\n  if (decodedToken.exp * 1000 < Date.now()) {\n    store.dispatch(logoutUser());\n    window.location.href = '/login';\n  } else {\n    store.dispatch({ type: SET_AUTHENTICATED });\n    axios.defaults.headers.common['Authorization'] = token;\n    store.dispatch(getUserData());\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme = {theme}>\n        <Provider store={store}>\n          <Router>\n            <Navbar/>\n            <div className=\"container\">\n              <Switch>\n                <Route exact path='/' component={Home}/>\n                <AuthRoute \n                  exact\n                  path='/login' \n                  component={Login} \n                  />\n                <AuthRoute \n                  exact\n                  path='/signup' \n                  component={Signup} \n                />\n                <Route exact path='/users/:handle' component={User}/>\n                <Route exact path=\"/users/:handle/scream/:screamId\" component={User}/>\n              </Switch>\n            </div>\n          </Router>\n        </Provider>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","export default {\r\n    palette: {\r\n      primary: {\r\n        light: '#cfd8dc',\r\n        main: '#607d8b',\r\n        dark: '#37474f',\r\n        contrastText: '#eceff1',\r\n      },\r\n      secondary: {\r\n        light: '#b2ebf2',\r\n        main: '#00acc1',\r\n        dark: '#006064',\r\n        contrastText: '#e0f7fa',\r\n      }\r\n    },\r\n    typography: {\r\n      useNextVariants: true,\r\n    },\r\n    forms: {\r\n      form: {\r\n        textAlign: 'center',\r\n      },\r\n      icon: {\r\n          width: 60,\r\n          margin: '20px auto 20px auto'\r\n      },\r\n      button: {\r\n          marginTop: 20,\r\n          position: 'relative',\r\n      },\r\n      textField: {\r\n          margin: '5px auto 5px auto'\r\n      },\r\n      customError: {\r\n          color: 'red',\r\n          fontSize: '0.8rem'\r\n      },\r\n      small: {\r\n          fontSize: '1rem'\r\n      },\r\n      link: {\r\n          color: '#00bfa5',\r\n          fontSize: '1rem'\r\n      }, \r\n      progress: {\r\n          position: 'absolute',\r\n      }\r\n    },\r\n    comments: {\r\n      invisibleSeparator: {\r\n        border: 'none',\r\n        margin: 4\r\n      },\r\n      ProfileImage: {\r\n        maxWidth: 200,\r\n        height: 200,\r\n        borderRadius: '50%',\r\n        objectFit: 'cover'\r\n      },\r\n      dialogContent: {\r\n        padding: 20\r\n      },\r\n      closeButton: {\r\n        position: 'absolute',\r\n        left: '90%',\r\n      },\r\n      expandButton: {\r\n        position: 'absolute',\r\n        bottom: '15%',\r\n        left: '80%',\r\n      },\r\n      spinnerDiv: {\r\n        textAlign: 'center',\r\n        marginTop: 50,\r\n        marginBottom: 50,\r\n      },\r\n      visibleSeparator: {\r\n        width: '100%',\r\n        borderBottom: '1px solid rgba(0,0,0,0.1)',\r\n        marginBottom: 20,\r\n      }\r\n    }\r\n  }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/profile-image.5a021ab9.png\";","module.exports = __webpack_public_path__ + \"static/media/login.48f997ae.png\";"],"sourceRoot":""}